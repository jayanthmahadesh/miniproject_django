{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedaddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Fund_me_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getowner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x06993de4d504b3fac4586829576e619c71ee944ab27fe40219daab9294acfed8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "891360",
    "logsBloom": "0x
    "blockHash": "0x6ca99d5b51f1283501a19556d94d4c47b9e16478ed65c4bc34066a78690b0b87",
    "transactionHash": "0x06993de4d504b3fac4586829576e619c71ee944ab27fe40219daab9294acfed8",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "891360",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "783da8938d62b09ed2bd1acc8b5f9e60",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedaddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Fund_me_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getowner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//pragma\\npragma solidity ^0.8.8;\\n\\n//imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//error codes\\nerror Fund_me_NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface public priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert Fund_me_NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedaddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedaddress);\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    // function getVersion() public view returns (uint256){\\n    //     // ETH/USD price feed address of Sepolia Network.\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n    //     return priceFeed.version();\\n    // }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // console.log(\\\"its comming here\\\");\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getowner() public view returns (uint256) {\\n        return 22;\\n    }\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly`\\n\",\"keccak256\":\"0x99bf73744fb9d8e6e4a38a80d375b77cf26a33a70e5cb730d3c2d7c78e21e6bc\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x08cd043af6fb2dc9c1174c692908550daee96fb0783644da2622517e80522fda\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051620010263803806200102683398181016040528101906100349190610115565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e2826100b7565b9050919050565b6100f2816100d7565b81146100fd57600080fd5b50565b60008151905061010f816100e9565b92915050565b60006020828403121561012b5761012a6100b2565b5b600061013984828501610100565b91505092915050565b60805160601c610ebe620001686000396000818161031b01526105a60152610ebe6000f3fe60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610142578063dba6335f1461014c578063dc0d3dff14610177578063fe0174bd146101b45761008e565b80633ccfd60b146100985780633e47d6f3146100af5780636b69a592146100ec578063741bef1a146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b005b3480156100bb57600080fd5b506100d660048036038101906100d191906107f6565b610559565b6040516100e3919061083c565b60405180910390f35b3480156100f857600080fd5b50610101610571565b60405161010e919061083c565b60405180910390f35b34801561012357600080fd5b5061012c61057e565b60405161013991906108b6565b60405180910390f35b61014a6101df565b005b34801561015857600080fd5b506101616105a4565b60405161016e91906108e0565b60405180910390f35b34801561018357600080fd5b5061019e60048036038101906101999190610927565b6105c8565b6040516101ab91906108e0565b60405180910390f35b3480156101c057600080fd5b506101c9610607565b6040516101d6919061083c565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061090919063ffffffff16565b101561025f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610256906109b1565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a00565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039e576040517f4e14943100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610449576000600182815481106103c4576103c3610a56565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044190610a85565b9150506103a1565b50600067ffffffffffffffff81111561046557610464610ace565b5b6040519080825280602002602001820160405280156104935781602001602082028036833780820191505090505b50600190805190602001906104a99291906106ec565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104d090610b2e565b60006040518083038185875af1925050503d806000811461050d576040519150601f19603f3d011682016040523d82523d6000602084013e610512565b606091505b5050905080610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d90610b8f565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106105d857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006016905090565b60008061061c8361064c565b90506000670de0b6b3a764000085836106359190610baf565b61063f9190610c38565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561069557600080fd5b505afa1580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190610cf6565b5050509150506402540be400816106e49190610d71565b915050919050565b828054828255906000526020600020908101928215610765579160200282015b828111156107645782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061070c565b5b5090506107729190610776565b5090565b5b8082111561078f576000816000905550600101610777565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107c382610798565b9050919050565b6107d3816107b8565b81146107de57600080fd5b50565b6000813590506107f0816107ca565b92915050565b60006020828403121561080c5761080b610793565b5b600061081a848285016107e1565b91505092915050565b6000819050919050565b61083681610823565b82525050565b6000602082019050610851600083018461082d565b92915050565b6000819050919050565b600061087c61087761087284610798565b610857565b610798565b9050919050565b600061088e82610861565b9050919050565b60006108a082610883565b9050919050565b6108b081610895565b82525050565b60006020820190506108cb60008301846108a7565b92915050565b6108da816107b8565b82525050565b60006020820190506108f560008301846108d1565b92915050565b61090481610823565b811461090f57600080fd5b50565b600081359050610921816108fb565b92915050565b60006020828403121561093d5761093c610793565b5b600061094b84828501610912565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061099b601b83610954565b91506109a682610965565b602082019050919050565b600060208201905081810360008301526109ca8161098e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a0b82610823565b9150610a1683610823565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a4b57610a4a6109d1565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a9082610823565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ac357610ac26109d1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b18600083610afd565b9150610b2382610b08565b600082019050919050565b6000610b3982610b0b565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b79600b83610954565b9150610b8482610b43565b602082019050919050565b60006020820190508181036000830152610ba881610b6c565b9050919050565b6000610bba82610823565b9150610bc583610823565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bfe57610bfd6109d1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4382610823565b9150610c4e83610823565b925082610c5e57610c5d610c09565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8881610c69565b8114610c9357600080fd5b50565b600081519050610ca581610c7f565b92915050565b6000819050919050565b610cbe81610cab565b8114610cc957600080fd5b50565b600081519050610cdb81610cb5565b92915050565b600081519050610cf0816108fb565b92915050565b600080600080600060a08688031215610d1257610d11610793565b5b6000610d2088828901610c96565b9550506020610d3188828901610ccc565b9450506040610d4288828901610ce1565b9350506060610d5388828901610ce1565b9250506080610d6488828901610c96565b9150509295509295909350565b6000610d7c82610cab565b9150610d8783610cab565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dc657610dc56109d1565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0357610e026109d1565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4057610e3f6109d1565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e7d57610e7c6109d1565b5b82820290509291505056fea2646970667358221220fdd46ed8a6e2e3507e2b14c4038a7b33fa050a162854484569146ce3643d1f1f64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610142578063dba6335f1461014c578063dc0d3dff14610177578063fe0174bd146101b45761008e565b80633ccfd60b146100985780633e47d6f3146100af5780636b69a592146100ec578063741bef1a146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b005b3480156100bb57600080fd5b506100d660048036038101906100d191906107f6565b610559565b6040516100e3919061083c565b60405180910390f35b3480156100f857600080fd5b50610101610571565b60405161010e919061083c565b60405180910390f35b34801561012357600080fd5b5061012c61057e565b60405161013991906108b6565b60405180910390f35b61014a6101df565b005b34801561015857600080fd5b506101616105a4565b60405161016e91906108e0565b60405180910390f35b34801561018357600080fd5b5061019e60048036038101906101999190610927565b6105c8565b6040516101ab91906108e0565b60405180910390f35b3480156101c057600080fd5b506101c9610607565b6040516101d6919061083c565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061090919063ffffffff16565b101561025f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610256906109b1565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a00565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039e576040517f4e14943100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610449576000600182815481106103c4576103c3610a56565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044190610a85565b9150506103a1565b50600067ffffffffffffffff81111561046557610464610ace565b5b6040519080825280602002602001820160405280156104935781602001602082028036833780820191505090505b50600190805190602001906104a99291906106ec565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104d090610b2e565b60006040518083038185875af1925050503d806000811461050d576040519150601f19603f3d011682016040523d82523d6000602084013e610512565b606091505b5050905080610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d90610b8f565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106105d857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006016905090565b60008061061c8361064c565b90506000670de0b6b3a764000085836106359190610baf565b61063f9190610c38565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561069557600080fd5b505afa1580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190610cf6565b5050509150506402540be400816106e49190610d71565b915050919050565b828054828255906000526020600020908101928215610765579160200282015b828111156107645782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061070c565b5b5090506107729190610776565b5090565b5b8082111561078f576000816000905550600101610777565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107c382610798565b9050919050565b6107d3816107b8565b81146107de57600080fd5b50565b6000813590506107f0816107ca565b92915050565b60006020828403121561080c5761080b610793565b5b600061081a848285016107e1565b91505092915050565b6000819050919050565b61083681610823565b82525050565b6000602082019050610851600083018461082d565b92915050565b6000819050919050565b600061087c61087761087284610798565b610857565b610798565b9050919050565b600061088e82610861565b9050919050565b60006108a082610883565b9050919050565b6108b081610895565b82525050565b60006020820190506108cb60008301846108a7565b92915050565b6108da816107b8565b82525050565b60006020820190506108f560008301846108d1565b92915050565b61090481610823565b811461090f57600080fd5b50565b600081359050610921816108fb565b92915050565b60006020828403121561093d5761093c610793565b5b600061094b84828501610912565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061099b601b83610954565b91506109a682610965565b602082019050919050565b600060208201905081810360008301526109ca8161098e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a0b82610823565b9150610a1683610823565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a4b57610a4a6109d1565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a9082610823565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ac357610ac26109d1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b18600083610afd565b9150610b2382610b08565b600082019050919050565b6000610b3982610b0b565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b79600b83610954565b9150610b8482610b43565b602082019050919050565b60006020820190508181036000830152610ba881610b6c565b9050919050565b6000610bba82610823565b9150610bc583610823565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bfe57610bfd6109d1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4382610823565b9150610c4e83610823565b925082610c5e57610c5d610c09565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8881610c69565b8114610c9357600080fd5b50565b600081519050610ca581610c7f565b92915050565b6000819050919050565b610cbe81610cab565b8114610cc957600080fd5b50565b600081519050610cdb81610cb5565b92915050565b600081519050610cf0816108fb565b92915050565b600080600080600060a08688031215610d1257610d11610793565b5b6000610d2088828901610c96565b9550506020610d3188828901610ccc565b9450506040610d4288828901610ce1565b9350506060610d5388828901610ce1565b9250506080610d6488828901610c96565b9150509295509295909350565b6000610d7c82610cab565b9150610d8783610cab565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dc657610dc56109d1565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0357610e026109d1565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4057610e3f6109d1565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e7d57610e7c6109d1565b5b82820290509291505056fea2646970667358221220fdd46ed8a6e2e3507e2b14c4038a7b33fa050a162854484569146ce3643d1f1f64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}